<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>40923152協同產品設計實習</title><link href="./" rel="alternate"></link><link href="./feeds/all.atom.xml" rel="self"></link><id>./</id><updated>2024-06-17T09:34:49+08:00</updated><entry><title>2024 Spring 課程W17</title><link href="./2024-Spring-40923152w17-blog.html" rel="alternate"></link><published>2024-06-16T11:00:00+08:00</published><updated>2024-06-17T09:34:49+08:00</updated><author><name>40923152</name></author><id>tag:None,2024-06-16:./2024-Spring-40923152w17-blog.html</id><summary type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程&lt;/p&gt;


&lt;h1&gt;WEEK17&lt;/h1&gt;
&lt;p&gt;填寫&lt;a href="https://docs.google.com/forms/d/e/1FAIpQLSdd4WdqZCfabonlM8jOzdpd3jQl_831C_7qXJBZuL8nOQ5NWA/viewform?pli=1"&gt;自評表&lt;/a&gt;,以及完成w17項目&lt;/p&gt;
&lt;p&gt;項目一 利用NX繪製機器人本體及輪子&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=H0IltQUlzRo&amp;amp;t=331s"&gt;機器人&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;項目二 以 NXOpen Python程式完成組立,挑選機器人本體及輪子作為組立&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=XDWbn2sRArM&amp;amp;t=57s"&gt;組裝過程&lt;/a&gt;
&lt;a href="https://drive.google.com/file/d/1y7I2W4Qhn1x_mWO4wa_-LImutRRVMfTZ/view"&gt;PY檔&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;項目三 將所完成的機器人球員放入 CoppeliaSim 運動場景中,讓球員可以由 ZMQ Remote API 程式控制&lt;/p&gt;</content><category term="w17"></category><category term="網誌編寫"></category></entry><entry><title>2024 Spring 課程W16</title><link href="./2024-Spring-40923152w16-blog.html" rel="alternate"></link><published>2024-06-09T11:00:00+08:00</published><updated>2024-06-17T09:09:27+08:00</updated><author><name>40923152</name></author><id>tag:None,2024-06-09:./2024-Spring-40923152w16-blog.html</id><summary type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程&lt;/p&gt;


&lt;h1&gt;WEEK16&lt;/h1&gt;
&lt;p&gt;填寫期末自評表單,將各週的倉儲以及blog,填入問題內來說明從這堂課學習到了甚麼,幫自己打個分數。&lt;/p&gt;</content><category term="w16"></category><category term="網誌編寫"></category></entry><entry><title>2024 Spring 課程W11</title><link href="./2024-Spring-40923152w11-blog.html" rel="alternate"></link><published>2024-05-05T11:00:00+08:00</published><updated>2024-06-17T08:52:46+08:00</updated><author><name>40923152</name></author><id>tag:None,2024-05-05:./2024-Spring-40923152w11-blog.html</id><summary type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程&lt;/p&gt;


&lt;h1&gt;WEEK11&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=co37O09vlZg"&gt;鋼球平衡台零件一 繪製過程&lt;/a&gt;&lt;/p&gt;</content><category term="w11"></category><category term="網誌編寫"></category></entry><entry><title>2024 Spring 課程W10</title><link href="./2024-Spring-40923152w10-blog.html" rel="alternate"></link><published>2024-04-28T11:00:00+08:00</published><updated>2024-06-17T08:51:07+08:00</updated><author><name>40923152</name></author><id>tag:None,2024-04-28:./2024-Spring-40923152w10-blog.html</id><summary type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程&lt;/p&gt;


&lt;h1&gt;WEEK10&lt;/h1&gt;
&lt;h1&gt;任務一 建立各班學員的倉儲、網站與分組連結&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://40923152.github.io/cd2024/content/Brython.html"&gt;網址&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;任務二 鋼球平衡台 PID 控制與模擬&lt;/h1&gt;
&lt;p&gt;請下載 cd2024_ball_balancing_platform_control_ref.7z, 閱讀後請將摘要內容放入個人與分組網誌中.
各篇論文之摘要及結論:&lt;/p&gt;
&lt;p&gt;論文一 2D Ball Balancer Control using QUARC&lt;/p&gt;
&lt;p&gt;摘要:本實驗旨在設計一個控制系統以穩定2D球平衡器上的球，並將其定位到預定位置。使用比例-積分-微分（PID）控制設計控制系統，涵蓋動態建模、傳遞函數獲取、PV補償器設計及PID補償器設計。模擬和實驗驗證了控制器的有效性，探討了設置點權重和積分器防風機制等技術。&lt;/p&gt;
&lt;p&gt;結論:該實驗成功設計並實施了控制系統，使2D球平衡器穩定控制，驗證了PV和PID控制器的有效性。&lt;/p&gt;
&lt;p&gt;論文二 A real time control system for balancing a ball on a platform with FPGA parallel implementation&lt;/p&gt;
&lt;p&gt;摘要:本文提出了一種基於PID控制器的解決方案，以提高實時控制平台上球位置的準確性。通過在FPGA上實現並行計算的PID控制器，提高了球位置的調節精度，並通過自然模擬驗證了效果。該設計可用於高速、多參數的實時控制系統。&lt;/p&gt;
&lt;p&gt;結論:本文通過FPGA上的並行PID控制器，實現了實時平台上球位置的高精度控制，驗證了其有效性。&lt;/p&gt;
&lt;p&gt;論文三 Ball_on_the_plate_balancing_control_system&lt;/p&gt;
&lt;p&gt;摘要:本研究提出了一種新的方法，通過使用FPGA上的PID控制器並行計算來提高實時平衡球在平台上位置的準確性。為此，我們開發了球平衡平台的傳遞函數，合成了PID控制器，並設計了其在FPGA上的實現。通過自然模擬證實了該方法的有效性和精確度的提升。&lt;/p&gt;
&lt;p&gt;結論:本文展示了一種新的實時控制系統方法，通過FPGA並行計算實現PID控制器，提高了控制系統的效率和準確性。該設計適用於多參數的高速對象實時控制。&lt;/p&gt;
&lt;p&gt;論文四 Construction and theoretical study&lt;/p&gt;
&lt;p&gt;摘要:本論文探討動態系統中的控制理論及其應用，通過構建和分析一個球體平衡平台。研究重點在於設計一個滿足系統需求的比例-積分-微分（PID）控制器，並比較理論模擬與物理構建結果的差異，從而確定控制系統在穩定不穩定或半穩定系統時的局限性。&lt;/p&gt;
&lt;p&gt;結論:使用線性控制設計球體平衡平台能滿足部分系統需求，但在靜態誤差上存在局限性。&lt;/p&gt;
&lt;p&gt;論文五 Design and Implementation a Ball Balancing System for Control Theory Course&lt;/p&gt;
&lt;p&gt;摘要:本項目旨在開發一個通過微控制器和相關控制算法調整梁的角度來保持球在梁上平衡的系統。通過閉環實時控制系統和精心調整的參數，系統能夠最小化球實際位置與設定位置之間的誤差。設計了三個原型進行對比，最終系統結合了伺服電機、距離傳感器、微控制器和機械平台，適用於本科生學習和理解PID控制的基本原理，並通過編程實現控制算法。&lt;/p&gt;
&lt;p&gt;結論:球平衡系統是一個經濟實惠的教育工具，通過傳感器和微控制器平台，學生可以應用所學知識，實踐閉環反饋理論，開發和演示相關的反饋控制算法。&lt;/p&gt;
&lt;p&gt;論文六 Simulation_and_Experimental_Study_of_Ball_Position&lt;/p&gt;
&lt;p&gt;摘要:本研究旨在開發一種利用微控制器和相關控制算法，通過實時感測反饋調整梁的角度來保持球平衡的系統。該系統使用閉環實時控制來最小化實際位置與預期位置之間的誤差。此教育工具有助於學生學習並應用比例-積分-微分（PID）控制原理。&lt;/p&gt;
&lt;p&gt;結論:本研究展示了球平衡系統作為教育工具的有效性，有助於學生理解和應用閉環反饋控制理論。&lt;/p&gt;
&lt;h1&gt;任務三 鋼球平衡台零組件繪圖&lt;/h1&gt;
&lt;p&gt;請根據 Solvespace_model _2d_for_cd2024_w6.7z 零組件尺寸, 利用 Siemens NX1872.7z (需要登入 @nfu.edu.tw, cd2024 採用電腦安裝的 NX1872 或隨身碟中的 NX1872) 執行零組件繪圖, 完成後請將過程影片放入個人與分組網站中.&lt;/p&gt;</content><category term="w10"></category><category term="網誌編寫"></category></entry><entry><title>2024 Spring 課程W7</title><link href="./2024-Spring-40923152w7-blog.html" rel="alternate"></link><published>2024-04-07T11:00:00+08:00</published><updated>2024-06-06T06:37:35+08:00</updated><author><name>40923152</name></author><id>tag:None,2024-04-07:./2024-Spring-40923152w7-blog.html</id><summary type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程&lt;/p&gt;


&lt;h1&gt;WEEK7&lt;/h1&gt;
&lt;p&gt;放假 回顧課程內容重點&lt;/p&gt;</content><category term="w7"></category><category term="網誌編寫"></category></entry><entry><title>2024 Spring 課程W6</title><link href="./2024-Spring-40923152w6-blog.html" rel="alternate"></link><published>2024-03-31T11:00:00+08:00</published><updated>2024-06-06T06:34:26+08:00</updated><author><name>40923152</name></author><id>tag:None,2024-03-31:./2024-Spring-40923152w6-blog.html</id><summary type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程&lt;/p&gt;


&lt;h1&gt;WEEK6&lt;/h1&gt;
&lt;p&gt;一.&lt;a href="https://www.youtube.com/watch?v=9iH5LxQA2vw"&gt;自評影片&lt;/a&gt;
二.&lt;a href="https://www.youtube.com/watch?v=KpH2pRTgfmA&amp;amp;t=42s"&gt;教學影片上字幕&lt;/a&gt;&lt;/p&gt;</content><category term="w6"></category><category term="網誌編寫"></category></entry><entry><title>2024 Spring 課程W5</title><link href="./2024-Spring-40923152w5-blog.html" rel="alternate"></link><published>2024-03-24T11:00:00+08:00</published><updated>2024-05-23T07:18:52+08:00</updated><author><name>40923152</name></author><id>tag:None,2024-03-24:./2024-Spring-40923152w5-blog.html</id><summary type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程&lt;/p&gt;


&lt;h1&gt;WEEK5&lt;/h1&gt;
&lt;p&gt;一.把之前的教學影片平均分配並將字幕加入影片中&lt;/p&gt;</content><category term="w5"></category><category term="網誌編寫"></category></entry><entry><title>2024 Spring 課程W4</title><link href="./2024-Spring-40923152w4-blog.html" rel="alternate"></link><published>2024-03-17T11:00:00+08:00</published><updated>2024-05-23T07:18:52+08:00</updated><author><name>40923152</name></author><id>tag:None,2024-03-17:./2024-Spring-40923152w4-blog.html</id><summary type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程&lt;/p&gt;


&lt;h1&gt;WEEK4&lt;/h1&gt;
&lt;p&gt;一.在Replit裡將做好的中翻英論文push到Github的小組倉儲&lt;/p&gt;</content><category term="w4"></category><category term="網誌編寫"></category></entry><entry><title>2024 Spring 課程W3</title><link href="./2024-Spring-40923152w3-blog.html" rel="alternate"></link><published>2024-03-10T11:00:00+08:00</published><updated>2024-05-23T07:18:52+08:00</updated><author><name>40923152</name></author><id>tag:None,2024-03-10:./2024-Spring-40923152w3-blog.html</id><summary type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程&lt;/p&gt;


&lt;h1&gt;WEEK3&lt;/h1&gt;
&lt;p&gt;一.組員們間討論 論文中翻英每個人所負責的部份&lt;/p&gt;</content><category term="w3"></category><category term="網誌編寫"></category></entry><entry><title>2024 Spring 課程W2</title><link href="./2024-Spring-40923152w2-blog.html" rel="alternate"></link><published>2024-03-03T11:00:00+08:00</published><updated>2024-05-23T07:18:52+08:00</updated><author><name>40923152</name></author><id>tag:None,2024-03-03:./2024-Spring-40923152w2-blog.html</id><summary type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程&lt;/p&gt;


&lt;h1&gt;WEEK2&lt;/h1&gt;
&lt;p&gt;一.在分組倉儲中新增個人子模組&lt;/p&gt;
&lt;p&gt;二.使用codespaces維護分組網站&lt;/p&gt;</content><category term="w2"></category><category term="網誌編寫"></category></entry><entry><title>2024 Spring 課程W1</title><link href="./2024-Spring-40923152w1-blog.html" rel="alternate"></link><published>2024-02-25T11:00:00+08:00</published><updated>2024-05-23T07:18:52+08:00</updated><author><name>40923152</name></author><id>tag:None,2024-02-25:./2024-Spring-40923152w1-blog.html</id><summary type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程&lt;/p&gt;


&lt;h1&gt;WEEK1&lt;/h1&gt;
&lt;p&gt;一.建立Github帳號跟Replit和倉儲、部落格&lt;/p&gt;</content><category term="w1"></category><category term="網誌編寫"></category></entry><entry><title>2024 Spring 課程</title><link href="./2024-Spring-w1-blog-tutorial.html" rel="alternate"></link><published>2024-02-18T11:00:00+08:00</published><updated>2024-02-28T16:22:26+08:00</updated><author><name>40923152</name></author><id>tag:None,2024-02-18:./2024-Spring-w1-blog-tutorial.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;


&lt;h1&gt;內容管理系統&lt;/h1&gt;
&lt;p&gt;使用者可以自行利用 &lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; 倉儲作為 Template, 建立自己的網站內容管理系統.&lt;/p&gt;
&lt;p&gt;引用網站網址連結的方法:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 在文章中多次引用同一個網站連結時, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;https://github.com/mdecycu/cmsimde_site&lt;/a&gt; - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 也可以使用 Markdown 的標準網站連結使用格式.&lt;/p&gt;
&lt;pre class="brush: python"&gt;
# 引用 Python 程式的方法
for i in range(10):
    print(i, "列出字串")
&lt;/pre&gt;

&lt;p&gt;也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼.&lt;/p&gt;
&lt;p&gt;從 1 累加到 100:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100"&gt;1 add to 100&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;將 iterable 與 iterator &lt;a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438"&gt;相關說明&lt;/a&gt;, 利用 Brython 與 Ace Editor 整理在這個頁面.&lt;/p&gt;
&lt;!-- 導入 brython 程式庫 --&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;p&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 FileSaver 與 filereader --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/FileSaver.min.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/filereader.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 ace --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/ace.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/ext-language_tools.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/mode-python3.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/snippets/python.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 --&gt;
&lt;script src="./../cmsimde/static/Cango-24v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/gearUtils-09.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/SVGpathUtils-6v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/sylvester.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/PrairieDraw.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/javascript"&gt;
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 結束--&gt;&lt;/p&gt;
&lt;!-- editor1 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor1" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run1"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console1"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console1"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd1"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console1"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div1"&gt;&lt;/div&gt;
&lt;!-- editor1 結束 --&gt;
&lt;hr/&gt;&lt;!-- ########################################## --&gt;&lt;p&gt;從 1 累加到 100 part2:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100part2"&gt;1 add to 100&lt;/button&gt;&lt;button id="cango_three_gears"&gt;cango_three_gears&lt;/button&gt;&lt;button id="bsnake"&gt;BSnake&lt;/button&gt;&lt;button id="aitetris"&gt;AI Tetris&lt;/button&gt;&lt;button id="threejsblock"&gt;Rotating Block&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 結束--&gt;&lt;/p&gt;
&lt;!-- editor2 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor2" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename2" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run2"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console2"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console2"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd2"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console2"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div2"&gt;&lt;/div&gt;
&lt;!-- editor2 結束 --&gt;
&lt;hr/&gt;&lt;p&gt;
&lt;script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"&gt;&lt;/script&gt;</content><category term="w1"></category><category term="網誌編寫"></category></entry></feed>